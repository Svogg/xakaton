"""'initial'

Revision ID: 1ed718c6efab
Revises: 
Create Date: 2023-05-28 13:03:56.361941

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1ed718c6efab'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('excursion', sa.Column('geo_data', sa.ARRAY(sa.Float()), nullable=True))
    op.add_column('mldata', sa.Column('id', sa.Integer(), autoincrement=True, nullable=False))
    op.drop_column('mldata', 'pk')
    op.add_column('user', sa.Column('username', sa.String(), nullable=False))
    op.add_column('user', sa.Column('hashed_password', sa.String(), nullable=False))
    op.add_column('user', sa.Column('disabled', sa.Boolean(), nullable=False))
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'user', ['email'])
    op.create_unique_constraint(None, 'user', ['username'])
    op.drop_column('user', 'phone_number')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'user', type_='unique')
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('user', 'disabled')
    op.drop_column('user', 'hashed_password')
    op.drop_column('user', 'username')
    op.add_column('mldata', sa.Column('pk', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_column('mldata', 'id')
    op.drop_column('excursion', 'geo_data')
    # ### end Alembic commands ###
