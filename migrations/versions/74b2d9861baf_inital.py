"""inital

Revision ID: 74b2d9861baf
Revises: 
Create Date: 2023-05-24 22:46:43.491395

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '74b2d9861baf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('airplane_ticket',
    sa.Column('target_city', sa.String(), nullable=False),
    sa.Column('flight_start', sa.String(), nullable=False),
    sa.Column('flight_end', sa.String(), nullable=False),
    sa.Column('flight_price', sa.Float(), nullable=False),
    sa.Column('airline_name', sa.String(), nullable=False),
    sa.Column('city_id', sa.String(), nullable=True),
    sa.Column('geo_data', sa.ARRAY(sa.Float()), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], ),
    sa.ForeignKeyConstraint(['target_city'], ['city.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('track')
    op.drop_table('route')
    op.add_column('services', sa.Column('session', sa.Integer(), nullable=False))
    op.add_column('services', sa.Column('target_region', sa.String(), nullable=True))
    op.add_column('services', sa.Column('current_city', sa.String(), nullable=True))
    op.add_column('services', sa.Column('target_city', sa.String(), nullable=True))
    op.add_column('services', sa.Column('airplane_ticket_to', sa.String(), nullable=True))
    op.add_column('services', sa.Column('airplane_ticket_back', sa.String(), nullable=True))
    op.add_column('services', sa.Column('target_hotel', sa.String(), nullable=True))
    op.add_column('services', sa.Column('target_restaurant', sa.String(), nullable=True))
    op.add_column('services', sa.Column('target_excursion', sa.String(), nullable=True))
    op.add_column('services', sa.Column('bought', sa.Boolean(), nullable=False))
    op.create_foreign_key(None, 'services', 'city', ['current_city'], ['id'])
    op.create_foreign_key(None, 'services', 'restaurant', ['target_restaurant'], ['id'])
    op.create_foreign_key(None, 'services', 'city', ['target_city'], ['id'])
    op.create_foreign_key(None, 'services', 'hotel', ['target_hotel'], ['id'])
    op.create_foreign_key(None, 'services', 'airplane_ticket', ['airplane_ticket_to'], ['id'])
    op.create_foreign_key(None, 'services', 'airplane_ticket', ['airplane_ticket_back'], ['id'])
    op.create_foreign_key(None, 'services', 'excursion', ['target_excursion'], ['id'])
    op.create_foreign_key(None, 'services', 'region', ['target_region'], ['id'])
    op.drop_column('services', 'id')
    op.drop_column('services', 'key')
    op.drop_column('services', 'time')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('services', sa.Column('time', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('services', sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('services', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'services', type_='foreignkey')
    op.drop_constraint(None, 'services', type_='foreignkey')
    op.drop_constraint(None, 'services', type_='foreignkey')
    op.drop_constraint(None, 'services', type_='foreignkey')
    op.drop_constraint(None, 'services', type_='foreignkey')
    op.drop_constraint(None, 'services', type_='foreignkey')
    op.drop_constraint(None, 'services', type_='foreignkey')
    op.drop_constraint(None, 'services', type_='foreignkey')
    op.drop_column('services', 'bought')
    op.drop_column('services', 'target_excursion')
    op.drop_column('services', 'target_restaurant')
    op.drop_column('services', 'target_hotel')
    op.drop_column('services', 'airplane_ticket_back')
    op.drop_column('services', 'airplane_ticket_to')
    op.drop_column('services', 'target_city')
    op.drop_column('services', 'current_city')
    op.drop_column('services', 'target_region')
    op.drop_column('services', 'session')
    op.create_table('route',
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('time', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('city_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], name='route_city_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='route_pkey')
    )
    op.create_table('track',
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('days_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('city_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], name='track_city_id_fkey'),
    sa.ForeignKeyConstraint(['region'], ['region.id'], name='track_region_fkey'),
    sa.PrimaryKeyConstraint('id', name='track_pkey')
    )
    op.drop_table('airplane_ticket')
    # ### end Alembic commands ###
